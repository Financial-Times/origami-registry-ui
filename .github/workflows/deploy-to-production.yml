name: Deploy to production
on:
  release:
    types: [created]
env:
  terraform_version: '0.12.29'
  terraform_working_dir: 'fastly/terraform/'
  fastly_service_id: '7mnWDqaHxkKwIFASbvnV13'
jobs:
  deploy-to-production:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: git fetch --prune --unshallow
    - run: git push https://heroku:${{ secrets.HEROKU_AUTH_TOKEN }}@git.heroku.com/origami-registry-ui-eu.git HEAD:refs/heads/master --force
    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@v0.8.0
      with:
        tf_actions_version: ${{ env.terraform_version }}
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: ${{ env.terraform_working_dir }}
        tf_actions_comment: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: 'Terraform Validate'
      uses: hashicorp/terraform-github-actions@v0.8.0
      with:
        tf_actions_version: ${{ env.terraform_version }}
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: ${{ env.terraform_working_dir }}
        tf_actions_comment: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: 'Terraform Plan'
      uses: hashicorp/terraform-github-actions@v0.8.0
      with:
        tf_actions_version: ${{ env.terraform_version }}
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: ${{ env.terraform_working_dir }}
        tf_actions_comment: true
        args: '-out=plan.tfplan -destroy'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        FASTLY_API_KEY: ${{ secrets.FASTLY_API_KEY }}
    - name: 'Terraform Apply'
      uses: hashicorp/terraform-github-actions@v0.8.0
      with:
        tf_actions_version: ${{ env.terraform_version }}
        tf_actions_subcommand: 'apply'
        tf_actions_working_dir: ${{ env.terraform_working_dir }}
        tf_actions_comment: true
        args: '--auto-approve -destroy'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        FASTLY_API_KEY: ${{ secrets.FASTLY_API_KEY }}

  create-change-log:
    needs: [deploy-to-production]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: Financial-Times/change-api-action@v1
        name: Create new change log
        with:
          change-api-key: ${{ secrets.CHANGE_API_KEY }}
          system-code: "origami-registry-ui"
          environment: prod
          slack-channels: "ft-changes,origami-deploys"
