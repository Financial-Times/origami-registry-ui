name: Test
on: [pull_request]
jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow
      - run: git push https://heroku:${{ secrets.HEROKU_AUTH_TOKEN }}@git.heroku.com/origami-registry-ui-eu.git HEAD:refs/heads/master --force
      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@v0.8.0
        with:
          tf_actions_version: ${{ env.terraform_version }}
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: ${{ env.terraform_working_dir }}
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Terraform Validate'
        uses: hashicorp/terraform-github-actions@v0.8.0
        with:
          tf_actions_version: ${{ env.terraform_version }}
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: ${{ env.terraform_working_dir }}
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Terraform Plan'
        uses: hashicorp/terraform-github-actions@v0.8.0
        with:
          tf_actions_version: ${{ env.terraform_version }}
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: ${{ env.terraform_working_dir }}
          tf_actions_comment: true
          args: '-out=plan.tfplan -destroy'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FASTLY_API_KEY: ${{ secrets.FASTLY_API_KEY }}
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: 'Terraform Format'
      uses: hashicorp/terraform-github-actions@v0.8.0
      with:
        tf_actions_version: 'latest'
        tf_actions_subcommand: 'fmt'
        tf_actions_working_dir: 'fastly/terraform/'
        tf_actions_comment: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/setup-node@v2.1.5
      with:
        node-version: 18.x
    - run: npm install --global npm@7.11.2
    - run: npm ci
    - run: npm run build
    - run: make verify
    - run: make test-unit-coverage
    - run: make test-integration
