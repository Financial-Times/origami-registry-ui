'use strict';

const BaseNode = require('./base');

class EventNode extends BaseNode {
    constructor(doclet) {
        super(doclet);
        this.group = 'events';
        this.label = 'Event';
        this.type = doclet.type && doclet.type.names ? doclet.type.names : [];
        this.addExamples(doclet);
        this.addEventProperties(doclet);
    }

    /**
     * Properties are not always their own doclet.
     * When documenting an event properties are nested within the event.
     * @see http://usejsdoc.org/tags-event.html#examples
     * @param {Object[]} doclets - Raw json doclets generated by JSDoc.
     * @returns {Object[]} Filtered doclets.
     */
    addEventProperties(doclet) {
        if (Array.isArray(doclet.properties)) {
            this.properties = this.properties || [];
            doclet.properties.forEach((property) => this.properties.push({
                'name': property.name,
                'type': property.type && property.type.names ? property.type.names : [],
                'description': this.replaceLinks(property.description) || ''
            }));
        }
    }
};

module.exports = EventNode;
